apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: nginx:latest
      ports:
        - containerPort: 80




 Deploy the Pod using kubectl:
Save the above YAML manifest to a file (e.g., pod.yaml) and run the following command:

bash
Copy code
kubectl apply -f pod.yaml
c. Verify the Pod is running:
Run the following command to check the status of the Pod:

bash
Copy code
kubectl get pods
You should see the Pod named my-pod with the status Running.



apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: my-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80





Create the Service using kubectl:
Save the above YAML manifest to a file (e.g., service.yaml) and run the following command:

bash
Copy code
kubectl apply -f service.yaml
f. Access the Service using localhost:
To access the Service using localhost on your local machine, you can use port forwarding. Run the following command:

bash
Copy code
kubectl port-forward service/my-service 8080:80
This command forwards traffic from local port 8080 to port 80 on the Service.

You can now access the Service by opening http://localhost:8080 in your web browser, and it will be directed to the Pod running the Nginx container.

Please note that the steps mentioned here assume you have a running Kubernetes cluster and the kubectl command-line tool configured to connect to the cluster.
